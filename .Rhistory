knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(pyrCGM2)
filename <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject.xls"
kinematicTable = read_excel(filename, sheet = "Kinematic cycles" ,col_names = TRUE,.name_repair = "minimal")
normativeXls <- "C:/Users/fleboeuf/Documents/Programmation/pyCGM2/pyrCGM2/" %+% "/data/normative/pyCGM2-Schwartz2008.xlsx"
normativeTable = loadNormativeDataSet(normativeXls, "Descriptive Kinematics")
kinematicTable <- kinematicTable %>%
defineComparisonfactor(c("Condition"))
descKinematicTable <- DescritiveFrameSequence(kinematicTable2,bySubjectFlag = FALSE)
kinematicTableÎd
kinematicTable$Frame$Îd
kinematicTable$Frame
kinematicTable
kinematicTable$Id
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="left")
descKinematicTable <- DescritiveFrameSequence(kinematicTable,bySubjectFlag = FALSE)
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="left")
ggplotLayer(legendPosition = "none",iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")+
geom_gaitPhaseLines(descDataToPlot)+
geom_corridor_ribbon (descDataToPlot) +
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "PelvisAngles" & Axis == "X"))
ggplotLayer(legendPosition = "none",iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")+
geom_gaitPhaseLines(descDataToPlot)+
geom_corridor_ribbon (descDataToPlot)
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
ggplotLayer(legendPosition = "none",iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")+
geom_gaitPhaseLines(descDataToPlot)+
geom_corridor_ribbon (descDataToPlot) +
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "PelvisAngles" & Axis == "X"))
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
ggplotLayer(legendPosition = "none",iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")+
geom_gaitPhaseLines(descDataToPlot)+
geom_corridor_ribbon (descDataToPlot) +
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "KneeAngles" & Axis == "X"))
dataToplot = filter(kinematicTable,
Label == "LKneeAngles" & Axis == "X" &
EventContext =="Left")
ggplotLayer(legendPosition = "none",iTitle="Knee Angles")+
geom_consistencyLine(dataToplot,color = "ComparisonFactor")+
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "KneeAngles" & Axis == "X"))
ggplotLayer(legendPosition = "none",iTitle="Knee Angles")+
geom_consistencyLine(dataToplot,color = "ComparisonFactor")
dataToplot
nrow(kinematicTable)
1:nrow(kinematicTable)
kinematicTable$Index = 1:nrow(kinematicTable)
kinematicTable <- kinematicTable %>%
defineComparisonfactor(c("Condition"))%>%
mutate(Index = 1:nrow(.))
dataToplot = filter(kinematicTable,
Label == "LKneeAngles" & Axis == "X" &
EventContext =="Left")
ggplotLayer(legendPosition = "none",iTitle="Knee Angles")+
geom_consistencyLine(dataToplot,color = "ComparisonFactor")+
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "KneeAngles" & Axis == "X"))
# Pelvis ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "X" & EventContext =="Left")
Pelvis_X = ggplotLayer(legendPosition = "none",iTitle="Pelvic tilt") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "Y" & EventContext =="Left")
Pelvis_Y = ggplotLayer(legendPosition = "none",iTitle="Pelvic obliquity") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "Z" & EventContext =="Left")
Pelvis_Z = ggplotLayer(legendPosition = "none",
iTitle="Pelvic Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Hip ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "X" & EventContext =="Left")
Hip_X = ggplotLayer(legendPosition = "none",
iTitle="Hip flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "Y" & EventContext =="Left")
Hip_Y = ggplotLayer(legendPosition = "none",
iTitle="Hip abduction") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "Z" & EventContext =="Left")
Hip_Z = ggplotLayer(legendPosition = "none",
iTitle="Hip Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Knee ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
Knee_X = ggplotLayer(legendPosition = "none",
iTitle="Knee flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "Y" & EventContext =="Left")
Knee_Y = ggplotLayer(legendPosition = "none",
iTitle="Knee abduction") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "Z" & EventContext =="Left")
Knee_Z = ggplotLayer(legendPosition = "none",
iTitle="Knee Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Ankle ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LAnkleAngles" & Axis == "X" & EventContext =="Left")
Ankle_X = ggplotLayer(legendPosition = "none",
iTitle="Ankle flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
Ankle_Y = NULL
datatoPlot = filter(descKinematicTable,Label == "LFootProgressAngles" & Axis == "Z" & EventContext =="Left")
footProgression_Z = ggplotLayer(legendPosition = "none",
iTitle="Foot Progression") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
p1 = plot_grid(Pelvis_X, Pelvis_Y,Pelvis_Z,ncol=3)
p2 = plot_grid(Hip_X, Hip_Y,Hip_Z,ncol=3)
p3 = plot_grid(Knee_X, Knee_Y,Knee_Z,ncol=3)
p4 = plot_grid(Ankle_X, Ankle_Y,footProgression_Z,ncol=3)
legend_shared <- get_legend(Pelvis_X +
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=2,byrow=TRUE)))
fig = plot_grid(p1, p2,p3, p4,
legend_shared,
nrow = 5,rel_heights = c(1,1,1,1, .2))
fig
# Pelvis ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "X" & EventContext =="Left")
Pelvis_X = ggplotLayer(legendPosition = "none",iTitle="Pelvic tilt") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "Y" & EventContext =="Left")
Pelvis_Y = ggplotLayer(legendPosition = "none",iTitle="Pelvic obliquity") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "Z" & EventContext =="Left")
Pelvis_Z = ggplotLayer(legendPosition = "none",
iTitle="Pelvic Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Hip ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "X" & EventContext =="Left")
Hip_X = ggplotLayer(legendPosition = "none",
iTitle="Hip flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "Y" & EventContext =="Left")
Hip_Y = ggplotLayer(legendPosition = "none",
iTitle="Hip abduction") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "Z" & EventContext =="Left")
Hip_Z = ggplotLayer(legendPosition = "none",
iTitle="Hip Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Knee ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
Knee_X = ggplotLayer(legendPosition = "none",
iTitle="Knee flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "Y" & EventContext =="Left")
Knee_Y = ggplotLayer(legendPosition = "none",
iTitle="Knee abduction") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "Z" & EventContext =="Left")
Knee_Z = ggplotLayer(legendPosition = "none",
iTitle="Knee Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Ankle ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LAnkleAngles" & Axis == "X" & EventContext =="Left")
Ankle_X = ggplotLayer(legendPosition = "none",
iTitle="Ankle flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
Ankle_Y = NULL
datatoPlot = filter(descKinematicTable,Label == "LFootProgressAngles" & Axis == "Z" & EventContext =="Left")
footProgression_Z = ggplotLayer(legendPosition = "none",
iTitle="Foot Progression") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
p1 = plot_grid(Pelvis_X, Pelvis_Y,Pelvis_Z,ncol=3)
p2 = plot_grid(Hip_X, Hip_Y,Hip_Z,ncol=3)
p3 = plot_grid(Knee_X, Knee_Y,Knee_Z,ncol=3)
p4 = plot_grid(Ankle_X, Ankle_Y,footProgression_Z,ncol=3)
legend_shared <- get_legend(Pelvis_X +
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=2,byrow=TRUE)))
fig = plot_grid(p1, p2,p3, p4,
legend_shared,
nrow = 5,rel_heights = c(1,1,1,1, .2))
fig
devtools::check()
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
ggplotLayer(legendPosition = "none",iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")+
geom_corridor_ribbon (descDataToPlot) +
geom_gaitPhaseLines(descDataToPlot)+
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "KneeAngles" & Axis == "X"))
devtools::load_all()
devtools::load_all()
DescritiveFrameSequence(kinematicTable,bySubjectFlag = FALSE)
devtools::check()
devtools::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
devtools::load_all()
#library(pyrCGM2)
filename <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject.xls"
table = read_excel(filename, sheet = "Kinematic cycles" ,col_names = TRUE,.name_repair = "minimal")
filename <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject.xls"
table = read_excel(filename, sheet = "Kinematic cycles" ,col_names = TRUE,.name_repair = "minimal")
xlsfiles1 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PreOp.xls"
xlsfiles2 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PostOp.xls"
xlsfiles <- c(xlsfiles1,xlsfiles2) # liste de fichiers
dataFrame1 <- constructTableFromXls(xlsfiles, "Kinematic cycles") # construction des données
table %>% select(-starts_with("Frame"))%>%names()
table %>%
filter(Label=="LKneeAngles" & Axis=="X" & EventContext=="Left")%>%
select(Label,Axis,EventContext,Cycle,Frame0,Frame100,cadence,speed)
table$Comparisonfactor = "preBloc"
table2 = table%>%
defineComparisonfactor(c("Condition","Shoes"))
descritiveTable <- DescritiveFrameSequence(table2,bySubjectFlag = FALSE)
variables = c("speed","cadence")
descritiveTable2 <- DescritiveScalarSequence(table2,variables,bySubjectFlag = FALSE)
table2%>%
constructOverallEvents( c("Id","ComparisonFactor"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
devtools::load_all()
#library(pyrCGM2)
filename <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject.xls"
table = read_excel(filename, sheet = "Kinematic cycles" ,col_names = TRUE,.name_repair = "minimal")
xlsfiles1 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PreOp.xls"
xlsfiles2 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PostOp.xls"
xlsfiles <- c(xlsfiles1,xlsfiles2) # liste de fichiers
dataFrame1 <- constructTableFromXls(xlsfiles, "Kinematic cycles") # construction des données
table %>% select(-starts_with("Frame"))%>%names()
table %>%
filter(Label=="LKneeAngles" & Axis=="X" & EventContext=="Left")%>%
select(Label,Axis,EventContext,Cycle,Frame0,Frame100,cadence,speed)
table$Comparisonfactor = "preBloc"
descritiveTable <- DescritiveFrameSequence(table2,bySubjectFlag = FALSE)
variables = c("speed","cadence")
descritiveTable2 <- DescritiveScalarSequence(table2,variables,bySubjectFlag = FALSE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
message=FALSE
)
devtools::load_all()
filename <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject.xls"
kinematicTable = read_excel(filename, sheet = "Kinematic cycles" ,col_names = TRUE,.name_repair = "minimal")
normativeXls <- "C:/Users/fleboeuf/Documents/Programmation/pyCGM2/pyrCGM2/" %+% "/data/normative/pyCGM2-Schwartz2008.xlsx"
normativeTable = loadNormativeDataSet(normativeXls, "Descriptive Kinematics")
kinematicTable <- kinematicTable %>%
defineComparisonfactor(c("Condition"))%>%
mutate(Index = 1:nrow(.))
descKinematicTable <- DescritiveFrameSequence(kinematicTable,bySubjectFlag = FALSE)
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
ggplotLayer(legendPosition = "none",iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")+
geom_corridor_ribbon (descDataToPlot) +
geom_gaitPhaseLines(descDataToPlot)+
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "KneeAngles" & Axis == "X"))
dataToplot = filter(kinematicTable,
Label == "LKneeAngles" & Axis == "X" &
EventContext =="Left")
ggplotLayer(legendPosition = "none",iTitle="Knee Angles")+
geom_consistencyLine(dataToplot,color = "ComparisonFactor")+
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "KneeAngles" & Axis == "X"))
# Pelvis ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "X" & EventContext =="Left")
Pelvis_X = ggplotLayer(legendPosition = "none",iTitle="Pelvic tilt") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "Y" & EventContext =="Left")
Pelvis_Y = ggplotLayer(legendPosition = "none",iTitle="Pelvic obliquity") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "Z" & EventContext =="Left")
Pelvis_Z = ggplotLayer(legendPosition = "none",
iTitle="Pelvic Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Hip ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "X" & EventContext =="Left")
Hip_X = ggplotLayer(legendPosition = "none",
iTitle="Hip flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "Y" & EventContext =="Left")
Hip_Y = ggplotLayer(legendPosition = "none",
iTitle="Hip abduction") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "Z" & EventContext =="Left")
Hip_Z = ggplotLayer(legendPosition = "none",
iTitle="Hip Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Knee ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
Knee_X = ggplotLayer(legendPosition = "none",
iTitle="Knee flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "Y" & EventContext =="Left")
Knee_Y = ggplotLayer(legendPosition = "none",
iTitle="Knee abduction") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "Z" & EventContext =="Left")
Knee_Z = ggplotLayer(legendPosition = "none",
iTitle="Knee Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Ankle ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LAnkleAngles" & Axis == "X" & EventContext =="Left")
Ankle_X = ggplotLayer(legendPosition = "none",
iTitle="Ankle flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
Ankle_Y = NULL
datatoPlot = filter(descKinematicTable,Label == "LFootProgressAngles" & Axis == "Z" & EventContext =="Left")
footProgression_Z = ggplotLayer(legendPosition = "none",
iTitle="Foot Progression") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
p1 = plot_grid(Pelvis_X, Pelvis_Y,Pelvis_Z,ncol=3)
p2 = plot_grid(Hip_X, Hip_Y,Hip_Z,ncol=3)
p3 = plot_grid(Knee_X, Knee_Y,Knee_Z,ncol=3)
p4 = plot_grid(Ankle_X, Ankle_Y,footProgression_Z,ncol=3)
legend_shared <- get_legend(Pelvis_X +
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=2,byrow=TRUE)))
fig = plot_grid(p1, p2,p3, p4,
legend_shared,
nrow = 5,rel_heights = c(1,1,1,1, .2))
fig
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
ggplotLayer()
descDataToPlot
ggplotLayer()
source("~/Programmation/pyCGM2/pyrCGM2/R/ggplotlayer.R")
ggplotLayer()
ggplotLayer(iTitle="",xLabel="Time Normalized", yLabel="Deg", legendPosition = "top")
source("~/Programmation/pyCGM2/pyrCGM2/R/ggplotlayer.R")
ggplotLayer(iTitle="",xLabel="Time Normalized", yLabel="Deg", legendPosition = "top")
source("~/Programmation/pyCGM2/pyrCGM2/R/ggplotlayer.R")
ggplotLayer(iTitle="",xLabel="Time Normalized", yLabel="Deg", legendPosition = "top")
ggplotLayer(iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")
source("~/Programmation/pyCGM2/pyrCGM2/R/ggplotlayer.R")
ggplotLayer(iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")
usethis::use_vignette("Scenario2-GaitAnalysis-SessionComparison [fr]", title = Comparaison de 2 sessions d 'analyse de marche')
usethis::use_vignette("Scenario2-GaitAnalysis-SessionComparison [fr]", title = "Comparaison de 2 sessions d 'analyse de marche")
usethis::use_vignette("Scenario2-GaitAnalysis-SessionComparison_fr", title = "Comparaison de 2 sessions d 'analyse de marche")
devtools::load_all()
#library(pyrCGM2)
windowsFonts(Times=windowsFont("TT Times New Roman"))
xlsfiles1 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PreOp.xls"
xlsfiles2 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PostOp.xls"
xlsfiles <- c(xlsfiles1,xlsfiles2) # liste de fichiers
table <- constructTableFromXls(xlsfiles, "Kinematic cycles") # construction des données
xlsfiles1 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PreOp.xls"
xlsfiles2 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PostOp.xls"
xlsfiles <- c(xlsfiles1,xlsfiles2) # liste de fichiers
table <- constructTableFromXls(xlsfiles, "Kinematic cycles") # construction des données
table$Condition
table$Index
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
devtools::load_all()
#library(pyrCGM2)
windowsFonts(Times=windowsFont("TT Times New Roman"))
xlsfiles1 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PreOp.xls"
xlsfiles2 <- dirname(getwd()) %+% "/data/gaitScenario/GaitAnalysis_OneSubject_PostOp.xls"
xlsfiles <- c(xlsfiles1,xlsfiles2) # liste de fichiers
kinematicTable <- constructTableFromXls(xlsfiles, "Kinematic cycles") # construction des données
normativeXls <- "C:/Users/fleboeuf/Documents/Programmation/pyCGM2/pyrCGM2/" %+% "/data/normative/pyCGM2-Schwartz2008.xlsx"
normativeTable = loadNormativeDataSet(normativeXls, "Descriptive Kinematics")
kinematicTable <- kinematicTable %>%
defineComparisonfactor(c("Condition"))
descKinematicTable <- DescritiveFrameSequence(kinematicTable,bySubjectFlag = FALSE)
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
ggplotLayer(legendPosition = "none",iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")+
geom_corridor_ribbon (descDataToPlot) +
geom_gaitPhaseLines(descDataToPlot)+
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "KneeAngles" & Axis == "X"))
descDataToPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
ggplotLayer(legendPosition = "top",iTitle="Knee flexion")+
geom_descriptiveLine(descDataToPlot,color = "ComparisonFactor")+
geom_corridor_ribbon (descDataToPlot) +
geom_gaitPhaseLines(descDataToPlot)+
geom_normative_ribbon(filter(normativeTable,Condition == "free" & Label == "KneeAngles" & Axis == "X"))
# Pelvis ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "X" & EventContext =="Left")
Pelvis_X = ggplotLayer(legendPosition = "none",iTitle="Pelvic tilt") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "Y" & EventContext =="Left")
Pelvis_Y = ggplotLayer(legendPosition = "none",iTitle="Pelvic obliquity") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LPelvisAngles" & Axis == "Z" & EventContext =="Left")
Pelvis_Z = ggplotLayer(legendPosition = "none",
iTitle="Pelvic Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Hip ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "X" & EventContext =="Left")
Hip_X = ggplotLayer(legendPosition = "none",
iTitle="Hip flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "Y" & EventContext =="Left")
Hip_Y = ggplotLayer(legendPosition = "none",
iTitle="Hip abduction") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LHipAngles" & Axis == "Z" & EventContext =="Left")
Hip_Z = ggplotLayer(legendPosition = "none",
iTitle="Hip Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Knee ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "X" & EventContext =="Left")
Knee_X = ggplotLayer(legendPosition = "none",
iTitle="Knee flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "Y" & EventContext =="Left")
Knee_Y = ggplotLayer(legendPosition = "none",
iTitle="Knee abduction") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
datatoPlot = filter(descKinematicTable,Label == "LKneeAngles" & Axis == "Z" & EventContext =="Left")
Knee_Z = ggplotLayer(legendPosition = "none",
iTitle="Knee Rotation") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
# Ankle ------------------------------------------------------------------
datatoPlot = filter(descKinematicTable,Label == "LAnkleAngles" & Axis == "X" & EventContext =="Left")
Ankle_X = ggplotLayer(legendPosition = "none",
iTitle="Ankle flex") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
Ankle_Y = NULL
datatoPlot = filter(descKinematicTable,Label == "LFootProgressAngles" & Axis == "Z" & EventContext =="Left")
footProgression_Z = ggplotLayer(legendPosition = "none",
iTitle="Foot Progression") +
geom_descriptiveLine(datatoPlot)+
geom_gaitPhaseLines(datatoPlot)
p1 = plot_grid(Pelvis_X, Pelvis_Y,Pelvis_Z,ncol=3)
p2 = plot_grid(Hip_X, Hip_Y,Hip_Z,ncol=3)
p3 = plot_grid(Knee_X, Knee_Y,Knee_Z,ncol=3)
p4 = plot_grid(Ankle_X, Ankle_Y,footProgression_Z,ncol=3)
legend_shared <- get_legend(Pelvis_X +
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=2,byrow=TRUE)))
fig = plot_grid(p1, p2,p3, p4,
legend_shared,
nrow = 5,rel_heights = c(1,1,1,1, .2))
fig
computeMAE(kinematicTable, "pre","PostOp",comparisonLabel = "comp1")
usethis::use_vignette("Scenario3-GaitAnalysis-MetricskinematicTable")
kinematicTable
kinematicTable$ComparisonFactor
computeMAE(kinematicTable, "pre","PostOp",comparisonLabel = "comp1")
computeMAE(kinematicTable, "pre","postOp",comparisonLabel = "comp1")
kinematicTable%>%
select(ComparisonFactor,Id,Label,Axis,EventContext,Cycle,Frame0:Frame100)%>%
pivot_longer(cols = starts_with("Frame"), values_to = "Value", names_to = "Variable")%>%
pivot_wider(names_from = ComparisonFactor,values_from = Value)%>%
group_by(Id,Label,Axis,EventContext,Cycle)%>%
mutate(Metrics = Metrics::mae(`pre`,`postOp`),
Comparisonlabel="comp1")%>%
select(Id,Label,Axis,EventContext,Cycle,Metrics,Comparisonlabel)%>%
distinct()%>%
rename(Mae = Metrics)
computeMAE(kinematicTable, "pre","postOp",
vars=c("stanceDuration","stepDuration"),colwise=TRUE,
comparisonLabel = "MAEsurPst")
computeMAE(kinematicTable, "pre","postOp",
vars=c("speed","cadence"),colwise=TRUE,
comparisonLabel = "MAEsurPst")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(devtools)
devtools::check()
